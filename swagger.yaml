swagger: '2.0'

info:
  version: 0.0.1
  title: Portus EVS sandbox demo API
  description: Portus EVS sandbox demo API
  contact:
    name: Digital & FinTech, Grant Thornton
    email: peng.xu@ie.gt.com
    url: ''
host: 'localhost:8080'
basePath: /user
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /save:
    post:
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        201:
          description: create user successful and return created user object
          schema:
            $ref: '#definitions/user'
        500:
          description: unexpected error
          schema:
            $ref: '#/responses/unexpectedError'
  /getById/{userId}:
    get:
      description: get reuested user by user ID
      parameters:
        - $ref: '#/parameters/userId'
      consumes: []
      responses:
        200:
          description: the successful get requested user by user ID
          schema:
            $ref: '#/definitions/user'
        404:
          description: user not found
          schema:
            $ref: '#/definitions/APIError'
        400:
          description: bad request
          schema:
            $ref: '#/responses/invalidRequest'
        500:
          description: unexpected error
          schema:
            $ref: '#/responses/unexpectedError'

  /updateUser:
    put:
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        200:
          description: create user successful and return created user object
          schema:
            $ref: '#definitions/user'
        500:
          description: unexpected error
          schema:
            $ref: '#/responses/unexpectedError'
  /delete/{userId}:
    delete:
      description: delete user by user ID
      parameters:
        - $ref: '#/parameters/userId'
      consumes: []
      responses:
        204:
          description: the successful delete user by user ID
        400:
          description: bad request
          schema:
            $ref: '#/responses/invalidRequest'
        500:
          description: unexpected error
          schema:
            $ref: '#/responses/unexpectedError'

definitions:
  user:
    type: object
    properties:
      id:
        type: integer
        description: user ID
      first_name:
        type: string
      last_name:
        type: string
      age:
        type: integer
      career:
        type: string
    required:
      - first_name
      - last_name
      - age

  APIError:
    description: content any error from API
    type: object
    properties:
      errorCode:
        description: content error code relate to API
        type: string
      errorMessage:
        description: content user-friendly error message
        type: string

responses:
  unexpectedError:
    description: unexpected error
    schema:
      $ref: '#/definitions/APIError'
  invalidRequest:
    description: invalid request
    schema:
      $ref: '#/definitions/APIError'

parameters:
  userId:
    name: userId
    in: path
    required: true
    type: string
    description: user ID